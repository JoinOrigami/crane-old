/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Greeter, GreeterInterface } from "../../contracts/Greeter";

const _abi = [
  {
    inputs: [],
    name: "GreeterError",
    type: "error",
  },
  {
    inputs: [],
    name: "greet",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "greeting",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    name: "setGreeting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "throwError",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610588806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80632f7643a814610051578063a41368621461005b578063cfae32171461006e578063ef690cc01461008c575b600080fd5b610059610094565b005b6100596100693660046103c2565b6100ad565b610076610171565b60405161008391906104c0565b60405180910390f35b610076610203565b60405163c8508fc360e01b815260040160405180910390fd5b61015a60405180606001604052806023815260200161055960239139600080546100d6906104da565b80601f0160208091040260200160405190810160405280929190818152602001828054610102906104da565b801561014f5780601f106101245761010080835404028352916020019161014f565b820191906000526020600020905b81548152906001019060200180831161013257829003601f168201915b505050505083610291565b805161016d906000906020840190610313565b5050565b606060008054610180906104da565b80601f01602080910402602001604051908101604052809291908181526020018280546101ac906104da565b80156101f95780601f106101ce576101008083540402835291602001916101f9565b820191906000526020600020905b8154815290600101906020018083116101dc57829003601f168201915b5050505050905090565b60008054610210906104da565b80601f016020809104026020016040519081016040528092919081815260200182805461023c906104da565b80156102895780601f1061025e57610100808354040283529160200191610289565b820191906000526020600020905b81548152906001019060200180831161026c57829003601f168201915b505050505081565b6102ed8383836040516024016102a993929190610515565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16632ced7cef60e01b1790526102f2565b505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b82805461031f906104da565b90600052602060002090601f0160209004810192826103415760008555610387565b82601f1061035a57805160ff1916838001178555610387565b82800160010185558215610387579182015b8281111561038757825182559160200191906001019061036c565b50610393929150610397565b5090565b5b808211156103935760008155600101610398565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156103d457600080fd5b813567ffffffffffffffff808211156103ec57600080fd5b818401915084601f83011261040057600080fd5b813581811115610412576104126103ac565b604051601f8201601f19908116603f0116810190838211818310171561043a5761043a6103ac565b8160405282815287602084870101111561045357600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000815180845260005b818110156104995760208185018101518683018201520161047d565b818111156104ab576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006104d36020830184610473565b9392505050565b600181811c908216806104ee57607f821691505b6020821081141561050f57634e487b7160e01b600052602260045260246000fd5b50919050565b6060815260006105286060830186610473565b828103602084015261053a8186610473565b9050828103604084015261054e8185610473565b969550505050505056fe4368616e67696e67206772656574696e672066726f6d202725732720746f2027257327a164736f6c6343000809000a";

type GreeterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GreeterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Greeter__factory extends ContractFactory {
  constructor(...args: GreeterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Greeter> {
    return super.deploy(overrides || {}) as Promise<Greeter>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Greeter {
    return super.attach(address) as Greeter;
  }
  override connect(signer: Signer): Greeter__factory {
    return super.connect(signer) as Greeter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GreeterInterface {
    return new utils.Interface(_abi) as GreeterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Greeter {
    return new Contract(address, _abi, signerOrProvider) as Greeter;
  }
}
