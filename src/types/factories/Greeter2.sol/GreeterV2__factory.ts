/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GreeterV2,
  GreeterV2Interface,
} from "../../Greeter2.sol/GreeterV2";

const _abi = [
  {
    inputs: [],
    name: "GreeterError",
    type: "error",
  },
  {
    inputs: [],
    name: "greet",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "greeting",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    name: "setGreeting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "throwError",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506105cd806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80632f7643a814610051578063a41368621461005b578063cfae32171461006e578063ef690cc01461008c575b600080fd5b610059610094565b005b610059610069366004610358565b6100ad565b610076610171565b6040516100839190610456565b60405180910390f35b610076610199565b60405163c8508fc360e01b815260040160405180910390fd5b61015a60405180606001604052806023815260200161059e60239139600080546100d690610470565b80601f016020809104026020016040519081016040528092919081815260200182805461010290610470565b801561014f5780601f106101245761010080835404028352916020019161014f565b820191906000526020600020905b81548152906001019060200180831161013257829003601f168201915b505050505083610227565b805161016d9060009060208401906102a9565b5050565b6060600060405160200161018591906104ab565b604051602081830303815290604052905090565b600080546101a690610470565b80601f01602080910402602001604051908101604052809291908181526020018280546101d290610470565b801561021f5780601f106101f45761010080835404028352916020019161021f565b820191906000526020600020905b81548152906001019060200180831161020257829003601f168201915b505050505081565b61028383838360405160240161023f9392919061055a565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16632ced7cef60e01b179052610288565b505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b8280546102b590610470565b90600052602060002090601f0160209004810192826102d7576000855561031d565b82601f106102f057805160ff191683800117855561031d565b8280016001018555821561031d579182015b8281111561031d578251825591602001919060010190610302565b5061032992915061032d565b5090565b5b80821115610329576000815560010161032e565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561036a57600080fd5b813567ffffffffffffffff8082111561038257600080fd5b818401915084601f83011261039657600080fd5b8135818111156103a8576103a8610342565b604051601f8201601f19908116603f011681019083821181831017156103d0576103d0610342565b816040528281528760208487010111156103e957600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000815180845260005b8181101561042f57602081850181015186830182015201610413565b81811115610441576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006104696020830184610409565b9392505050565b600181811c9082168061048457607f821691505b602082108114156104a557634e487b7160e01b600052602260045260246000fd5b50919050565b600080835481600182811c9150808316806104c757607f831692505b60208084108214156104e757634e487b7160e01b86526022600452602486fd5b8180156104fb576001811461050c57610539565b60ff19861689528489019650610539565b60008a81526020902060005b868110156105315781548b820152908501908301610518565b505084890196505b505050505050610552816221212160e81b815260030190565b949350505050565b60608152600061056d6060830186610409565b828103602084015261057f8186610409565b905082810360408401526105938185610409565b969550505050505056fe4368616e67696e67206772656574696e672066726f6d202725732720746f2027257327a164736f6c6343000809000a";

type GreeterV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GreeterV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GreeterV2__factory extends ContractFactory {
  constructor(...args: GreeterV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GreeterV2> {
    return super.deploy(overrides || {}) as Promise<GreeterV2>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GreeterV2 {
    return super.attach(address) as GreeterV2;
  }
  override connect(signer: Signer): GreeterV2__factory {
    return super.connect(signer) as GreeterV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GreeterV2Interface {
    return new utils.Interface(_abi) as GreeterV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GreeterV2 {
    return new Contract(address, _abi, signerOrProvider) as GreeterV2;
  }
}
